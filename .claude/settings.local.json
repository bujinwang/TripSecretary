{
  "permissions": {
    "allow": [
      "Bash(__NEW_LINE__ sqlite3 \"$DB_PATH\" \"\nSELECT ''=== All DELETE operations on travel_info ==='' as header;\n\nSELECT \n  datetime(timestamp, ''localtime'') as time,\n  action,\n  record_id,\n  details\nFROM audit_log\nWHERE table_name = ''travel_info'' AND action = ''DELETE''\nORDER BY timestamp DESC\nLIMIT 50;\n\")",
      "Bash(__NEW_LINE__ sqlite3 \"$DB_PATH\" \"\nSELECT ''=== Last 10 operations on mh9pqhp5fziejfhtta7 ==='' as header;\n\nSELECT \n  datetime(timestamp, ''localtime'') as time,\n  action,\n  table_name,\n  record_id\nFROM audit_log\nWHERE record_id = ''mh9pqhp5fziejfhtta7''\nORDER BY timestamp DESC\nLIMIT 10;\n\nSELECT '''' as separator;\nSELECT ''=== First operation on new record mhct8mp7ji2ip9d56bs ==='' as header;\n\nSELECT \n  datetime(timestamp, ''localtime'') as time,\n  action,\n  table_name,\n  record_id\nFROM audit_log\nWHERE record_id = ''mhct8mp7ji2ip9d56bs''\nORDER BY timestamp ASC\nLIMIT 5;\n\")",
      "Bash(find:*)",
      "Bash(awk:*)",
      "Bash(sort:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/cleanup-docs.sh:*)",
      "Bash(tree:*)",
      "Bash(if [ -d \"implementation\" ])",
      "Bash(then mv implementation history/)",
      "Bash(fi)",
      "Bash(if [ -d \"arrival-cards\" ])",
      "Bash(then )",
      "Bash(xargs:*)",
      "Bash(for file in docs/architecture/*.md)",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(npx expo start)",
      "Bash(kill:*)",
      "Bash(npm install)",
      "Bash(npx expo start:*)",
      "Bash(pkill:*)",
      "Bash(npx expo install:*)",
      "Bash(watchman watch-del:*)",
      "Bash(watchman watch-project:*)",
      "Bash(npx openspec:*)",
      "Bash(export DB_PATH:*)",
      "Bash(if [ -f \"$DB_PATH\" ])",
      "Bash(then sqlite3 \"$DB_PATH\" \".schema\")",
      "Bash(else echo \"Database not found at $DB_PATH\")",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Read(//Users/bujin/Library/Developer/CoreSimulator/**)",
      "Bash(xargs ls:*)"
    ],
    "deny": [],
    "ask": []
  }
}
